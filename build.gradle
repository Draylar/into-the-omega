plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version + "-" + project.minecraft_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/intotheomega.accesswidener")
}

repositories {
    maven { url 'https://jitpack.io' }

    maven {
        name = 'Ladysnake Mods'
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }

    maven {
        url 'https://repo.repsy.io/mvn/gandiber/geckolib'
    }

    maven {
        name = "dblsaiko"
        url = "https://maven.dblsaiko.net/"
    }

    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/releases/"
    }

    maven { url = "https://hephaestus.dev/release" }
    maven { url "https://maven.shedaniel.me/" }
    mavenLocal()
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation ("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

    // GeckoLib (https://github.com/bernie-g/geckolib) - MIT
    modImplementation ("software.bernie.geckolib:${project.geckolib_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }

    // Trinkets (https://github.com/emilyploszaj/trinkets) - MIT
    modImplementation ("com.github.emilyploszaj:trinkets:${project.trinkets_version}")

    // REI
    modImplementation ("me.shedaniel:RoughlyEnoughItems-fabric:8.0.442") {
        exclude group: "net.fabricmc.fabric-api"
    }

    // Attributed (https://github.com/Draylar/attributed) - MIT
    modImplementation include ('com.github.Draylar:attributed:1.0.4.1-1.16.5') {
        exclude group: "net.fabricmc.fabric-api"
    }

    // Myron for OBJ model loading (https://github.com/Haven-King/myron) - MIT license, JIJ
    modImplementation include ("dev.monarkhes:myron:${project.myron_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }

    // Omega Config for mod configuration (https://github.com/Draylar/omega-config) - MIT license, JIJ
    include modImplementation("com.github.Draylar.omega-config:omega-config-base:${project.omega_config_version}")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
