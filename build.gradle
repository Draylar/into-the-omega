plugins {
    id 'fabric-loom' version '0.7-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version + "-" + project.minecraft_version
group = project.maven_group

minecraft {
    accessWidener "src/main/resources/intotheomega.accesswidener"
}

repositories {
    maven { url 'https://jitpack.io' }
    maven { url "http://server.bbkr.space:8081/artifactory/libs-release" }
    maven {
        name = "NerdHubMC"
        url = "https://maven.abusedmaster.xyz/"
    }

    maven {
        name = "Ladysnake Libs"
        url = "https://dl.bintray.com/ladysnake/libs"
    }

    maven {
        url 'https://repo.repsy.io/mvn/gandiber/geckolib'
    }

    maven {
        name = "dblsaiko"
        url = "https://maven.dblsaiko.net/"
    }

    maven { url = "https://hephaestus.dev/release" }
    maven { url "https://maven.shedaniel.me/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
    modCompile ("net.fabricmc.fabric-api:fabric-api:0.30.3+1.16") {
        exclude(module: "fabric-rendering-v1")
    }

    // dev testing
    modImplementation ('com.github.Draylar:wolves-with-armor:1.5.2-1.16.2') {
        exclude group: "com.github.OnyxStudios.Cardinal-Components-API"
        exclude group: "net.fabricmc.fabric-api"
    }

    // gecko lib
    modImplementation ("software.bernie.geckolib:geckolib-fabric-1.16.5:3.0.20:dev") {
        exclude group: "net.fabricmc.fabric-api"
    }
    include "software.bernie.geckolib:geckolib-fabric-1.16.5:3.0.20:dev"

    // trinkets
    modImplementation ("com.github.emilyploszaj:trinkets:${trinkets_version}") {
        exclude group: "io.github.onyxstudios.Cardinal-Components-API"
        exclude group: "net.fabricmc.fabric-api"
    }
    include "com.github.emilyploszaj:trinkets:${trinkets_version}"

    //  shield lib
    modImplementation ("com.github.CrimsonDawn45:Fabric-Shield-Lib:${project.fabric_shield_lib_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }
    include "com.github.CrimsonDawn45:Fabric-Shield-Lib:${project.fabric_shield_lib_version}"

    // REI
    modImplementation ("me.shedaniel:RoughlyEnoughItems:5.2.10") {
        exclude group: "net.fabricmc.fabric-api"
    }

    // CCA
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:2.7.12"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:2.7.12"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:2.7.12"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:2.7.12"

    // Attributed
    modImplementation 'com.github.Draylar:attributed:1.0.1-1.16.2'
    include 'com.github.Draylar:attributed:1.0.1-1.16.2'

    // Enderman spawner patch
    modCompile 'com.github.Draylar:angerable-patch:1.0.0'
    include 'com.github.Draylar:angerable-patch:1.0.0'

    // Dev building utils
    modImplementation ('com.github.Draylar:staff-of-building:1.2.4-1.16.2') {
        exclude group: "net.fabricmc.fabric-api"
    }

    // cool rendering
    modImplementation ("grondag:canvas-mc116-configurable-pipeline:1.0.+") {
        exclude group: "com.terraformersmc"
        exclude group: "net.fabricmc.fabric-api"
    }

    modImplementation ("dev.monarkhes:myron:1.5.2") {
        exclude group: "net.fabricmc.fabric-api"
    }
    include "dev.monarkhes:myron:1.5.2"

    modCompileOnly ('com.github.Draylar:visible-structure-void:b4ad15c4d7') {
        exclude group: "net.fabricmc.fabric-api"
    }
    modRuntime ('com.github.Draylar:visible-structure-void:b4ad15c4d7') {
        exclude group: "net.fabricmc.fabric-api"
    }

    modImplementation ('com.github.Draylar:dynamic-attributes:ac2e490347') {
        exclude group: "net.fabricmc.fabric-api"
    }
    include 'com.github.Draylar:dynamic-attributes:ac2e490347'
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
