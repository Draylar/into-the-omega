plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version + "-" + project.minecraft_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/intotheomega.accesswidener")
}

repositories {
    maven { url 'https://jitpack.io' }

    maven {
        name = 'Ladysnake Mods'
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }

    maven {
        url 'https://repo.repsy.io/mvn/gandiber/geckolib'
    }

    maven {
        name = "dblsaiko"
        url = "https://maven.dblsaiko.net/"
    }

    maven { url = "https://hephaestus.dev/release" }
    maven { url "https://maven.shedaniel.me/" }
    mavenLocal()
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation ("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

    // gecko lib
    modImplementation ("software.bernie.geckolib:${project.geckolib_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }

    // trinkets
    modImplementation ("com.github.emilyploszaj:trinkets:${project.trinkets_version}") {
        exclude group: "net.fabricmc.fabric-api"
        exclude group: "com.terraformersmc"
    }

    // REI
    modImplementation ("me.shedaniel:RoughlyEnoughItems-fabric:8.0.442") {
        exclude group: "net.fabricmc.fabric-api"
    }

    // Attributed
    modImplementation ('com.github.Draylar:attributed:1.0.4.1-1.16.5') {
        exclude group: "net.fabricmc.fabric-api"
    }

    // cool rendering
//    modCompileOnly ("grondag:canvas-mc116-configurable-pipeline:1.0.+") {
//        exclude group: "com.terraformersmc"
//        exclude group: "net.fabricmc.fabric-api"
//        exclude group: "io.github.prospector"
//    }

    modImplementation ("dev.monarkhes:myron:${project.myron_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }

//    modImplementation ('com.github.Draylar:visible-structure-void:b4ad15c4d7') {
//        exclude group: "net.fabricmc.fabric-api"
//    }

    include modImplementation("com.github.Draylar.omega-config:omega-config-gui:${project.omega_config_version}") {
        exclude group: "com.terraformersmc"
    }

    include 'draylar:jvoronoi:1.0.2'
    modImplementation ('draylar:jvoronoi:1.0.2') {
        exclude group: "org.openjfx"
    }
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
